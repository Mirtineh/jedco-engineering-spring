{"version":3,"sources":["services/rootUrl.js","services/userManagementService.js","views/users/Users.js"],"names":["getRootUrl","cm_url","um_url","file_url","loadRoles","token","rootUrl","config","headers","Authorization","concat","axios","get","then","response","data","loadActions","loadRoleActions","id","createRole","insertDto","method","url","updateRole","updateDto","name","description","updateDefinedActions","deleteRole","loadUsers","createUsers","updateUser","checkUserActivation","actNo","completeRegistration","deleteUser","suspendUser","reactivateUser","getBadge","status","Transition","React","forwardRef","props","ref","_jsx","Slide","direction","Users","modal","setModal","useState","isCreate","setIsCreate","alterAction","setAlterAction","dialogConfirm","setDialogConfirm","userTobeAltered","setUserTobeAltered","columns","setColumns","toggle","setFirstName","setLastName","setEmail","setPhoneNumber","setUserRoleId","setUsername","setPassword","setEmailSelected","setSmsSelected","store","useStore","useEffect","fields","push","key","_style","width","label","sorter","filter","login","roles","includes","some","role","confirmDialog","user","action","handleUserDelete","NotificationManager","success","message","load_users","toggleDetails","error","catch","err","console","log","handleUserSuspend","handleUserReactivate","countries","setCountries","userRoles","setUserRoles","firstName","lastName","email","phoneNumber","userRoleId","userId","setUserId","username","password","smsSelected","emalSelected","details","setDetails","index","position","indexOf","newDetails","slice","splice","_jsxs","_Fragment","children","CModal","show","onClose","size","backdrop","closeOnBackdrop","CModalHeader","closeButton","CRow","CCol","xs","md","CCard","CCardBody","onSubmit","event","preventDefault","notTypes","CFormGroup","row","CLabel","htmlFor","CInput","onInput","e","target","value","placeholder","required","type","autoComplete","CSelect","custom","onChange","map","item","i","tag","sm","className","variant","inline","CInputCheckbox","disabled","checked","onClick","CCardFooter","CCardHeader","CDataTable","items","tableFilter","itemsPerPageSelect","itemsPerPage","hover","striped","bordered","outlined","pagination","scopedSlots","CBadge","color","userStatusId","userStatus","userRoleName","userName","show_details","CButton","shape","update","toggleUpdateUser","phoneNo","delete","CDropdown","CDropdownToggle","CDropdownMenu","CDropdownItem","href","CCollapse","style","marginRight","marginBottom","Date","parseFloat","registeredDate","toLocaleString","statusId","marginLeft","activationNo","paddingLeft","paddingRight","Dialog","open","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","textAlign","length"],"mappings":"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","file":"static/js/9.3e0b242c.chunk.js","sourcesContent":["import React from 'react'\n\nexport const getRootUrl = () => {\n  // const cm_url = \"http://172.16.200.17:31456/JedcoInspection/rest\";\n  // const um_url = \"http://172.16.200.17:31456/JedcoInspection/rest\";\n  // const file_url = \"http://172.16.200.17:31456\";\n  const cm_url = \"/Engineering\";\n  const um_url = \"/Engineering\";\n  const file_url = \"\";\n    const url = {cm_url,um_url, file_url};\n    return url;\n  };\n","import { getRootUrl } from './rootUrl';\nimport axios from 'axios';\n\nexport const loadRoles = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserRole/userRoleList\",\n    config).then(response => response.data)\n}\n\nexport const loadActions = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/UserAction/userActionList\",\n    config).then(response => response.data)\n}\n\nexport const loadRoleActions = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/roleDefinition/definedRolesList?userRoleId=\" + id,\n    config).then(response => response.data)\n}\n\nexport function createRole(token, insertDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/roleDefinition/defineRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\n\nexport function updateRole(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/UserRole/updateUserRole\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      \"id\": updateDto.id,\n      \"name\": updateDto.name,\n      \"description\": updateDto.description\n    }\n  }).then(response => response.data)\n}\n\nexport function updateDefinedActions(token, updateDto) {\n  const rootUrl = getRootUrl().um_url;\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/roleDefinition/updateDefinedActions\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: updateDto\n  }).then(response => response.data)\n}\n\nexport function deleteRole(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/roleDefinition/deleteUserRole?UserRoleID=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\nexport const loadUsers = (token) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/users/listUsers\",\n    config).then(response => response.data)\n}\n\nexport const loadUsersByRole = (token, id) => {\n  const rootUrl = getRootUrl().um_url;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return axios.get(\n    rootUrl + \"/User/userListByRole?roleId=\"+id,\n    config).then(response => response.data)\n}\n\nexport const createUsers = (token, insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/users/registerUser\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: insertDto\n  }).then(response => response.data)\n}\nexport const updateUser = (token, updateDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/users/updateUserProfile\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: updateDto\n  }).then(response => response.data)\n}\n\n\nexport const checkUserActivation = (actNo) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios.get(\n    rootUrl + \"/User/activationNumCheck?activationNO=\"+actNo).then(response => response.data)\n}\n\nexport const completeRegistration = (insertDto) => {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'post',\n    url: rootUrl + \"/User/setUserNameAndPassword\",\n    data: insertDto\n  }).then(response => response.data)\n}\n\n\nexport function deleteUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'delete',\n    url: rootUrl + \"/users/deleteUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function suspendUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/users/suspendUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n\nexport function reactivateUser(token, id) {\n  const rootUrl = getRootUrl().um_url;\n\n  return axios({\n    method: 'put',\n    url: rootUrl + \"/users/activateUser?userId=\" + id,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => response.data)\n}\n","import React, {lazy, useEffect, useState} from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDataTable,\n  CFormGroup,\n  CInput,\n  CInputCheckbox,\n  CLabel,\n  CModal,\n  CModalHeader,\n  CRow,\n  CSelect,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle\n} from '@coreui/react'\nimport {NotificationManager} from 'react-notifications';\nimport {useStore} from '../../MobxStore'\nimport {createUsers, deleteUser, loadRoles, loadUsers, reactivateUser, suspendUser, updateUser} from '../../services/userManagementService';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 1:\n      return 'success';\n    case 'Inactive':\n      return 'secondary';\n    case 2:\n      return 'warning';\n    case 3:\n      return 'danger'\n    case 4:\n      return 'danger';\n    case 5:\n      return 'danger';\n    default:\n      return 'primary'\n  }\n};\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'));\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst Users = () => {\n\n\n  const [modal, setModal] = useState(false);\n  const [isCreate, setIsCreate] = useState(true);\n\n  const [alterAction, setAlterAction] = useState('');\n  const [dialogConfirm, setDialogConfirm] = React.useState(false);\n  const [userTobeAltered, setUserTobeAltered] = useState({});\n  const [columns, setColumns]= useState([]);\n\n\n  const toggle = () => {\n\n    setModal(!modal);\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNumber(\"\");\n    setUserRoleId(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setIsCreate(true);\n    setEmailSelected(true);\n    setSmsSelected(false);\n  };\n  const toggleUpdateUser=(user)=>{\n    setUserId(user.id)\n    setIsCreate(false);\n    setFirstName(user.firstName);\n    setLastName(user.lastName);\n    setEmail(user.email);\n    setPhoneNumber(user.phoneNo);\n    setUserRoleId(user.userRoleId);\n    setUsername(user.username);\n    setPassword(\"\");\n    setEmailSelected(true);\n    setSmsSelected(false);\n    setModal(!modal);\n  }\n\n\n\n\n  const store = useStore();\n\n  useEffect(() => {\n    const fields = [];\n    fields.push(\"firstName\",\n      \"lastName\",\n      {key: 'email', _style: {width: '20%'}},\n      \"phoneNo\",\n      {\n        key: 'username',\n        label: 'userName',\n        sorter: false,\n        filter: false\n      },\n      \"userRole\",\n      'userStatus',\n      {\n        key: 'show_details',\n        label: 'Details',\n        _style: {width: '1%'},\n        sorter: false,\n        filter: false\n      });\n      if(store.login.roles.includes(\"RESET_USER\")){\n        fields.push({\n          key: 'update',\n          label: 'Update',\n          sorter: false,\n          filter: false,\n        })\n      }\n    if (store.login.roles.some(role => role === \"DELETE_USER\" \n                              || role === \"SUSPEND_USER\"\n                              || role === \"ACTIVATE_USER\")){\n      fields.push(\n        {\n          key: 'delete',\n          label: 'Action',\n          sorter: false,\n          filter: false\n        })\n    }\n    setColumns(fields);\n  }, []);\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"handle Submit here\");\n    const notTypes = [];\n    if (emalSelected) {\n      notTypes.push(\"email\");\n    }\n    if (smsSelected) {\n      notTypes.push(\"sms\")\n    }\n\n   \n    if(isCreate){\n      const insertDto = {\n        \"roleId\": userRoleId,\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": email,\n        \"phoneNo\": phoneNumber,\n        \"username\": username,\n        \"password\": password\n      };\n      createUsers(store.login.token, insertDto).then(response => {\n        if (response.status) {\n          NotificationManager.success(response.message, 'Success', 3000);\n          load_users();\n          toggle();\n  \n        } else {\n          NotificationManager.error(response.message, 'Failed!', 3000);\n        }\n      })\n        .catch(err => {\n          console.log(err);\n          if (err.response.status == 403) {\n            NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n          } else {\n            NotificationManager.error(\"Unable to try User Create, check your connection\", 'Failed!', 3000);\n          }\n        });\n    }\n    else{\n      const updateDto ={\n        \"userId\":userId,\n        \"userRoleId\": userRoleId,\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": email,\n        \"phone\": phoneNumber,\n        \"password\" : password\n      }\n      updateUser(store.login.token, updateDto).then(response => {\n        if (response.status) {\n          NotificationManager.success(response.message, 'Success', 3000);\n          load_users();\n          toggle();\n  \n        } else {\n          NotificationManager.error(response.message, 'Failed!', 3000);\n        }\n      })\n        .catch(err => {\n          console.log(err);\n          if (err.response.status == 403) {\n            NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n          } else {\n            NotificationManager.error(\"Unable to try User Create, check your connection\", 'Failed!', 3000);\n          }\n        });\n\n    }\n\n  };\n\n  const confirmDialog = (user, action) => {\n    setDialogConfirm(true);\n    setUserTobeAltered(user);\n    setAlterAction(action);\n  };\n\n  const handleAction = (id) => {\n\n    if (alterAction.length > 0) {\n      if (alterAction === \"Delete\") {\n        handleUserDelete(id);\n      } else if (alterAction === \"Suspend\") {\n        handleUserSuspend(id);\n      } else if (alterAction === \"Reactivate\") {\n        handleUserReactivate(id);\n      }\n\n    }\n  };\n\n  const handleUserDelete = (id) => {\n\n    deleteUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n        // toggle();\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Delete, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n  const handleUserSuspend = (id) => {\n\n    suspendUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Suspend, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n  const handleUserReactivate = (id) => {\n\n    reactivateUser(store.login.token, id).then(response => {\n      if (response.status) {\n        NotificationManager.success(response.message, 'Success', 3000);\n        load_users();\n        setDialogConfirm(false);\n        toggleDetails([]);\n\n      } else {\n        NotificationManager.error(response.message, 'Failed!', 3000);\n      }\n    })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status == 403) {\n          NotificationManager.error(\"You are not allowed to perform this task\", 'Failed!', 3000);\n        } else {\n          NotificationManager.error(\"Unable to try User Suspend, check your connection\", 'Failed!', 3000);\n        }\n      });\n\n  };\n\n\n  const [countries, setCountries] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [userRoleId, setUserRoleId] = useState('');\n  const [userId,setUserId] = useState('')\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [smsSelected, setSmsSelected] = useState(false);\n  const [emalSelected, setEmailSelected] = useState(true);\n\n\n  const load_users = () => {\n    loadUsers(store.login.token).then(response => {\n\n      setCountries(response);\n      console.log(response);\n\n    })\n      .catch(err => console.log(err));\n  };\n\n\n\n  useEffect(() => {\n    load_users()\n  }, []);\n\n  useEffect(() => {\n    loadRoles(store.login.token).then(response => {\n      setUserRoles(response);\n      console.log(response);\n    }).catch(err => console.log(err));\n  }, []);\n\n\n  const [details, setDetails] = useState([]);\n  // const [items, setItems] = useState(usersData)\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  };\n\n  return (\n    <>\n      <CModal\n        show={modal}\n        onClose={toggle}\n        size='lg'\n        backdrop\n        closeOnBackdrop={false}\n      >\n        <CModalHeader size=\"modal-lg\" closeButton>\n          <h4>{isCreate?\"Add User\":\"Update User\"}</h4>\n        </CModalHeader>\n\n        <CRow>\n          <CCol xs=\"12\" md=\"12\">\n            <CCard>\n              <CCardBody>\n                <form onSubmit={handleSubmit}>\n\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"text-input\">First Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"text-input\" name=\"text-input\" onInput={e => setFirstName(e.target.value)}\n                              value={firstName} placeholder=\"Enter First Name\" required/>\n                      {/* <CFormText>This is a help text</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"text-input\">Last Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"text-input\" name=\"text-input\" onInput={e => setLastName(e.target.value)}\n                              value={lastName} placeholder=\"Enter Last Name\" required/>\n                      {/* <CFormText>This is a help text</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Phone Number</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"email-input\" name=\"email-input\" onInput={e => setPhoneNumber(e.target.value)}\n                              value={phoneNumber} placeholder=\"Enter Phone Number\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Email</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput type=\"email\" id=\"email-input\" name=\"email-input\" onInput={e => setEmail(e.target.value)}\n                              value={email} placeholder=\"Enter Email\" autoComplete=\"email\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Username</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      <CInput id=\"username-input\" name=\"username-input\" onInput={e => setUsername(e.target.value)}\n                              value={username} placeholder=\"Enter Username\" required/>\n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"email-input\">Password</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\">\n                      {isCreate?\n                      <CInput id=\"password-input\" name=\"password-input\" onInput={e => setPassword(e.target.value)}\n                              value={password} placeholder=\"Enter Password\" required/>:\n                      <CInput id=\"password-input\" name=\"password-input\" onInput={e => setPassword(e.target.value)}\n                              value={password} placeholder=\"Enter Password\"/>}\n                      \n                      {/* <CFormText className=\"help-block\">Please enter your email</CFormText> */}\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"2\">\n                      <CLabel htmlFor=\"selectLg\">Select Role</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"4\" size=\"lg\">\n                      <CSelect custom name=\"selectLg\" id=\"selectLg\"\n                               value={userRoleId}\n                               onChange={e => {\n                                 setUserRoleId(e.target.value)\n                               }}>\n                        <option key={-1} value={0}>--Select User Role--</option>\n                        {userRoles.map((item, i) => {\n                          return (\n                            <option key={i} value={item.id}>{item.name}</option>\n                          )\n                        }, this)}\n                      </CSelect>\n                    </CCol>\n\n                    <CCol tag=\"label\" sm=\"2\" md=\"2\" className=\"col-form-label\">\n                      Notification\n                    </CCol>\n                    <CCol sm=\"4\">\n                      <CFormGroup variant=\"custom-checkbox\" inline>\n                        <CInputCheckbox\n                          custom\n                          id=\"inline-checkbox1\"\n                          name=\"inline-checkbox1\"\n                          value=\"sms\"\n                          disabled\n                          checked={smsSelected}\n                          onClick={(e) => {\n                            setSmsSelected(e.target.checked);\n                            console.log(\"Sms selected\" + e.target.checked)\n                          }}\n                        />\n                        <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">SMS</CLabel>\n\n                        <CFormGroup variant=\"custom-checkbox\" inline/>\n\n                      </CFormGroup>\n                      <CFormGroup variant=\"custom-checkbox\" inline>\n                        <CInputCheckbox\n                          custom id=\"inline-checkbox2\"\n                          name=\"inline-checkbox2\"\n                          value=\"email\"\n                          checked={emalSelected}\n                          onClick={(e) => {\n                            setEmailSelected(e.target.checked);\n                            console.log(\"Email selected\" + e.target.checked)\n                          }}/>\n                        <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">Email</CLabel>\n                      </CFormGroup>\n                    </CCol>\n                  </CFormGroup>\n                  <CCardFooter/>\n                  <div className=\"d-flex justify-content-between\">\n                    <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-md\" onClick={toggle}>Cancel</button>\n\n                    <button type=\"submit\" className=\"btn btn-outline-success m-2 btn-md\">Submit</button>\n                  </div>\n                </form>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs=\"12\" md=\"6\">\n          </CCol>\n        </CRow>\n\n\n      </CModal>\n\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n\n              <div className=\"d-flex justify-content-between\">\n                <h4>Users</h4>\n                <div className=\"d-flex justify-content-end\">\n                  {store.login.roles.includes(\"REGISTER_USER\")?\n                  <button type=\"button\" className=\"btn btn-outline-success m-2 btn-md\" onClick={toggle}>Add User\n                  </button>\n                    :\"\"}\n                </div>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n\n              <CDataTable\n                items={countries}\n                fields={columns}\n                tableFilter\n                itemsPerPageSelect\n                itemsPerPage={5}\n                hover\n                size=\"sm\"\n                striped\n                bordered\n                outlined\n                pagination\n                scopedSlots={{\n                  'userStatus':\n                    (item) => (\n                      <td>\n                        <CBadge color={getBadge(item.userStatusId)}>\n                          {item.userStatus}\n                        </CBadge>\n                      </td>\n                    ),\n                  'role':\n                    (item) => (\n                      <td>\n                        {item.userRoleName}\n                      </td>\n                    ),\n                  'userName':\n                    (item) => (\n                      <td>\n                        {item.userName == null ? <strong>Not Set</strong> : item.userName}\n                      </td>\n                    ),\n\n                  'show_details':\n                    (item, index) => {\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={() => {\n                              toggleDetails(index)\n                            }}\n                          >\n                            {details.includes(index) ? 'Hide' : 'Show'}\n                          </CButton>\n                        </td>\n                      )\n                    },\n\n                  'update':\n                    (item, index) => {\n                      return (\n                        <div>{store.login.roles.includes(\"RESET_USER\")?\n                          <td className=\"py-2\">\n\n                              <CButton\n                                color=\"warning\"\n                                variant=\"outline\"\n                                shape=\"square\"\n                                size=\"sm\"\n                                onClick={\n\n                                  () => toggleUpdateUser(item)\n                                }\n                              >\n                                Update\n                              </CButton>\n                          </td>:\"\"}\n                        </div>\n\n                      )\n                    },\n                  'delete':\n                  (item,index) => {\n                    return ( \n                    <td className=\"py-2\">\n                      <CDropdown>\n                        <CDropdownToggle color=\"secondary\" size=\"sm\"></CDropdownToggle>\n                        <CDropdownMenu>\n                          {(store.login.roles.includes(\"DELETE_USER\") && item.userStatus !== 'Deleted')?\n                            <CDropdownItem href=\"#\" onClick={()=> confirmDialog(item, \"Delete\")}>Delete</CDropdownItem>:null\n                          }\n                          {(store.login.roles.includes(\"SUSPEND_USER\") && item.userStatus !== 'Suspended')?\n                            <CDropdownItem href=\"#\" onClick={()=>confirmDialog(item, \"Suspend\")}>Suspend</CDropdownItem>:null\n                          }\n                          {(store.login.roles.includes(\"ACTIVATE_USER\") && item.userStatus !== 'Active')?\n                            <CDropdownItem href=\"#\" onClick={()=>confirmDialog(item, \"Reactivate\")}>Activate</CDropdownItem>:null\n                          }\n                        </CDropdownMenu>\n                     </CDropdown>\n                  </td>)\n                  },\n                    // (item, index) => {\n                    //   return (\n                    //     <td className=\"py-2\">\n                    //       {store.login.roles.includes(\"DELETE_USER\")?\n                    //       <CButton\n                    //         color=\"danger\"\n                    //         variant=\"outline\"\n                    //         shape=\"square\"\n                    //         size=\"sm\"\n                    //         onClick={\n\n                    //           () => confirmDialog(item, \"Delete\")\n                    //         }\n                    //       >\n                    //         Delete\n                    //       </CButton>:\"\"}\n                    //     </td>\n                    //   )\n                    // },\n                  'details':\n                    (item, index) => {\n                      return (\n                        <CCollapse show={details.includes(index)}>\n                          <CCardBody>\n                            <div className=\"d-flex justify-content-start\">\n\n                              <div style={{marginRight: 20, width: \"40%\"}}><h4 style={{marginBottom: 4}}>\n                                <strong>{item.firstName + \" \" + item.lastName}</strong></h4>\n                                <p>\n\n                                  <p className=\"text-muted\">Registered\n                                    On: {new Date(parseFloat(item.registeredDate)).toLocaleString()}</p>\n\n                                </p>\n                              </div>\n                              {item.statusId == 2 ?\n                                <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                  Activation</strong></h6><p>\n                                  User has not been activated yet.\n                                  <CButton\n                                    variant=\"outline\"\n                                    color=\"warning\"\n                                    shape=\"square\"\n                                    size=\"sm\"\n                                    style={{marginLeft: 10, marginRight: 10}}\n                                  >\n                                    Resend Activation number\n                                  </CButton>\n                                </p>\n                                  <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>Activation Number</strong></h6><p>\n                                    {item.activationNo}\n                                  </p></div>\n                                </div>\n\n\n                                : item.statusId == 1 ?\n                                  <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                    Activation</strong></h6><p>\n                                    User account Activated.\n\n                                    {store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                                    <CButton\n                                      variant=\"outline\"\n                                      color=\"danger\"\n                                      shape=\"square\"\n                                      size=\"sm\"\n                                      style={{marginLeft: 10, marginRight: 10, paddingLeft: 10, paddingRight: 10}}\n                                      onClick={\n\n                                        () => confirmDialog(item, \"Suspend\")\n                                      }\n                                    > Suspend User</CButton>:\"\"}\n\n                                  </p></div> : item.statusId == 4 ?\n                                    <div style={{marginRight: 20, width: \"60%\"}}><h6 style={{marginBottom: 4}}><strong>User\n                                      Activation</strong></h6><p>\n                                      User account Suspended.\n\n                                      {store.login.roles.includes(\"VIEW_AND_MAINTAIN_USER_MANAGEMENT\")?\n                                        <CButton\n                                          variant=\"outline\"\n                                          color=\"success\"\n                                          shape=\"square\"\n                                          size=\"sm\"\n                                          style={{marginLeft: 10, marginRight: 10}}\n                                          onClick={\n\n                                            () => confirmDialog(item, \"Reactivate\")\n                                          }\n                                        > Reactivate User</CButton>:\"\"}\n\n                                    </p></div> : \"\"}\n\n                            </div>\n\n                          </CCardBody>\n                        </CCollapse>\n                      )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n      </CRow>\n      <div>\n        <Dialog\n          open={dialogConfirm}\n          TransitionComponent={Transition}\n          keepMounted\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{<h5>Are You sure?</h5>}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {<div><h5 style={{textAlign: 'center'}}><small>You are about\n                to {alterAction} User <strong>{userTobeAltered.firstName + \" \" + userTobeAltered.lastName + \" \"}</strong> -\n                User <strong>{userTobeAltered.userRoleName}</strong></small></h5><h6 style={{textAlign: 'center'}}> Are\n                You sure you want to proceed?</h6></div>}\n            </DialogContentText>\n          </DialogContent>\n          <div className=\"d-flex justify-content-between\">\n            <button type=\"button\" className=\"btn btn-outline-danger m-2 btn-sm\" onClick={() => {\n              setDialogConfirm(false)\n            }}>Cancel\n            </button>\n\n            <button className=\"btn btn-outline-success m-2 btn-sm\" type=\"submit\" onClick={(e) => {\n              handleAction(userTobeAltered.id)\n            }}>Continue\n            </button>\n\n          </div>\n        </Dialog>\n      </div>\n\n    </>\n  )\n};\n\nexport default Users\n\n"],"sourceRoot":""}